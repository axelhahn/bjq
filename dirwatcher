#!/bin/bash
# ======================================================================
#
# AXELS DIR WATCHER
#
# ----------------------------------------------------------------------
# 2023-11-NN  v0.1  ah  first lines
# ======================================================================

_version=0.1

SOURCE=${BASH_SOURCE[0]}
while [ -L "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  JQ_DIRSELF=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
  SOURCE=$(readlink "$SOURCE")
  [[ $SOURCE != /* ]] && SOURCE=$JQ_DIRSELF/$SOURCE # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
JQ_DIRSELF=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )

. "$JQ_DIRSELF/include/dirwatch.class.sh" || exit

# ----------------------------------------------------------------------
# FUNCTIONS
# ----------------------------------------------------------------------

function showHelp(){
  local _self; _self=$( basename $0 )
  echo "______________________________________________________________________________"
  color.echo "white" "cyan" "     "
  color.print "white" "cyan" " DIR "; echo "  W A T C H E R"
  color.print "white" "cyan" "_____"; echo -n "_____________________________________________________________________"
  color.invert; echo "v$_version"; color.reset
  echo

  cat << EOF
  ðŸ‘¤ Author:  Axel Hahn
  ðŸ§¾ Source:  https://github.com/axelhahn/bjq/
  ðŸ“œ License: GNU GPL 3.0
  ðŸ“— Docs:    https://www.axel-hahn.de/docs/bjq/
______________________________________________________________________________

Watch a directory and wait for new files.
Plugins can define by a filefilter what to execute for a matching file.
The command will be added with bjp.
______________________________________________________________________________

SYNTAX:

  $_self -w [DIR]
  $_self [option]

OPTIONS:

  -h | --help         Show this help and exit
  -d | --dir   [DIR]  set a directory to watch or to list
  -l | --list         list current files
  -w | --watch [DIR]  start run to process pending jobs
  -v | --version      Show version and exit

EXAMPLES:

  $_self -l       List files to process below default dir
                      $DW_DIRBASE
  $_self -d /my/path/ -l
                      List files to process below /my/path/

  $_self -w       Start watching incoming files below default dir
                      $DW_DIR2WATCH
  $_self -d /my/path/ -l
                      Start watching incoming files below /my/path/incoming
______________________________________________________________________________
EOF

}

# ----------------------------------------------------------------------
# MAIN
# ----------------------------------------------------------------------

dw.setdir

if [ "$#" -eq 0 ]; then
  echo "ERROR: Parameter required"
  echo "Use '$(basename $0) --help' to show more information."
  exit 1
fi

while [[ "$#" -gt 0 ]]; do case $1 in
  -h|--help) showHelp;exit 0;;
  -d|--dir)  dw.setdir "$2"; shift; shift ;;
  -l|--list) dw.list; shift;;
  -p|--plugins) dw.plugins; shift;;
  -w|--watch) dw.watch "$2"; shift;;
  -v|--version) echo "$(basename $0) $_version"; exit 0;;
  *) color.echo red "ERROR: Unknown parameter: $1"; showHelp; exit 1;
esac; done

exit 0

# ----------------------------------------------------------------------
